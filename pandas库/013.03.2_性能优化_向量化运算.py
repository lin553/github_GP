import numpy as np
import pandas as pd


print('\n-------------np.random.randint(0,10,(3,3))---------------')
a = np.random.randint(0,10,(3,3))
print(a)

print('\n-------------np.linspace(0,3,100)---------------')
b = np.linspace(0,3,100)    # 绘图的数据点非常有用。你提供的代码 b = np.linspace(0, 3, 100) 中包含了三个参数，每个参数的意义如下：
                                # 第一个参数 (0): 这是生成数组的起始值。在这个例子中，数组将以 0 开始。
                                # 第二个参数 (3): 这是生成数组的结束值。注意，与某些其他函数（如 np.arange）不同，
                                                # np.linspace 的结束值是包含在内的，这意味着生成的数组将包含这个结束值
                                                # （或者尽可能接近它，取决于是否能够精确地分割区间）。在这个例子中，数组将以 3 结束。
                                # 第三个参数 (100): 这是要生成的样本数量。换句话说，这个参数指定了在起始值和结束值之间要生成多
                                                # 少个等间隔的数字。在这个例子中，将在 0 到 3 的范围内生成 100 个均匀分布的数字。
print(b)


print('\n-------------np.eye(100)---------------')
c = np.eye(100)     # np.eye(100) 是 NumPy 库中的一个函数调用，用于创建一个 100x100 的单位矩阵（也称为恒等矩阵）。
                        # 单位矩阵是一种特殊的方阵，在对角线上的元素都是 1，而其他位置的元素都是 0。这种矩阵在数学和工程计算中非常有用，
                        # 尤其是在涉及线性代数的操作时。
                    # 参数解释
                        # 100: 这个参数指定了生成的单位矩阵的维度。在这个例子中，np.eye(100) 将生成一个 100x100 的矩阵。
print(c)



print('\n------------(c[:10])----------------')
print(c[:10])


print('\n-----------向量化运算-----------------')
a = pd.Series([1,2,3,4],index=['a', 'b', 'c','d'])
b = pd.Series([2,3,4,5],index=['a', 'e', 'f', 'g'])

print('a:\n',a,'\n\nb:\n',b)
c = a + b
print('\nc: \n',c)

c.dropna()      # 删除包含缺失值的行或列。
print('\nc.dropna(): \n',c)

c = a.add(b, fill_value=0)      # fill_value=0:   填充缺失值:0
print('\na.add(b, fill_value=0): \n',c)