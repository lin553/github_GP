在Pandas中，.apply 和 .agg 是两个用于对数据进行操作的非常有用的方法，但它们有不同的用途和行为。


# =================================================================
.apply
    功能：.apply 可以用于对DataFrame或Series的行或列应用一个函数。它提供了一种灵活的方式来执行元素级、行级或列级的操作。
    使用场景：当你需要对DataFrame的每一列（或行）应用同一个自定义函数时，或者当你想在DataFrame的特定轴上应用一个返回标量、列表、Series或其
             他复合对象的函数时，可以使用.apply。
    灵活性：.apply 方法更加灵活，因为它允许你传递任何Python函数，无论是内置函数还是用户自定义函数。

示例：
df = pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6]})
df.apply(lambda x: x**2) # 对每列应用一个lambda函数，返回一个新的DataFrame



# =================================================================
.agg
    功能：.agg 主要用于聚合操作，即对数据集的一个轴（行或列）上的多个分组执行一系列函数，并返回结果。它可以应用于整个DataFrame或单独的列，
          支持一次性应用多个聚合函数。
    使用场景：当需要计算描述性统计，如总和、平均值、最大值等，或希望同时应用多个聚合函数到数据集上时，.agg 是首选方法。
    效率与性能：对于聚合操作，.agg 通常比.apply更有效率，特别是当你应用的是内置的聚合函数集合时。

示例：
df = pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6]})
df.agg(['sum', 'mean']) # 同时对每列应用求和和求平均值操作，返回一个包含结果的DataFrame


# =================================================================
总结
    .apply 更加通用且灵活，适合于任何类型的操作，尤其是那些不能轻易归类为聚合操作的情况。
    .agg 更加高效，特别适用于聚合操作，比如统计数据摘要，并且可以方便地一次应用多个聚合函数。